{
	"info": {
		"_postman_id": "c7c9fad2-1619-4a70-bb21-3008d33ca09a",
		"name": "Adopt_A_Pet",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Scripts\" tab**\n\nAdding tests to your requests can help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/fa30ea0a-373d-4545-a668-e7b283cca343/aW1hZ2UucG5n\" alt=\"\" height=\"1530\" width=\"2162\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n    \n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26496391"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const resp= pm.response.json();\r",
									"const userId= resp.id;\r",
									"pm.collectionVariables.set(\"userId\", userId);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"firstName\": \"testildi\",\r\n  \"lastName\": \"FK\",\r\n  \"email\": \"fki@example.com\",\r\n  \"password\": \"Password0+\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Advertisement",
			"item": [
				{
					"name": "Post advertisement",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const currentDate= new Date().toISOString();\r",
									"pm.collectionVariables.set(\"currentDate\", currentDate);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const resp= pm.response.json();\r",
									"const req = JSON.parse(pm.request.body.raw)\r",
									"\r",
									"pm.test(\"the advertisment attached to correct pet\",()=>{\r",
									"    pm.expect(resp.petDto.id).to.eql(req.petId)\r",
									"});\r",
									"\r",
									"pm.collectionVariables.set(\"advertisementId\", resp.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"petId\": 1,\r\n  \"expiresAt\": \"{{currentDate}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/advertisement",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"advertisement"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all advertisements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const resp= pm.response.json();\r",
									"\r",
									"pm.test(\"All advertisement containes the previous posted advertisement\",()=>{\r",
									"    const advId = pm.collectionVariables.get(\"advertisementId\");\r",
									"    pm.expect(resp.some(e=> e.id==advId)).to.be.true;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/advertisement",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"advertisement"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one specific advertisement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"//a kÃ©rt id az -e"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/advertisement/{{advertisementId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"advertisement",
								"{{advertisementId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get current advertisements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/advertisement/current",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"advertisement",
								"current"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Application",
			"item": [
				{
					"name": "Add an application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const applicationId= pm.response.json().id;\r",
									"console.log(applicationId)\r",
									"pm.collectionVariables.set(\"applicationId\", applicationId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"userId\": \"{{userId}}\",\r\n  \"advertisementId\": {{advertisementId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/application",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"application"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/application/:userId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"application",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "3e286870-35ee-4038-9d83-67e7d63e49fb"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/application/app/:applicationId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"application",
								"app",
								":applicationId"
							],
							"variable": [
								{
									"key": "applicationId",
									"value": "{{applicationId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all applications for specific advertisement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/application/ad/:advertisementId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"application",
								"ad",
								":advertisementId"
							],
							"variable": [
								{
									"key": "advertisementId",
									"value": "{{advertisementId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify an application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const resp= pm.response.json();\r",
									"pm.test(\"The application is accepted\", ()=>{\r",
									"    pm.expect(resp.isAccepted).to.be.true\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"isAccepted\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/application/:applicationId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"application",
								":applicationId"
							],
							"variable": [
								{
									"key": "applicationId",
									"value": "{{applicationId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/application/:applicationId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"application",
								":applicationId"
							],
							"variable": [
								{
									"key": "applicationId",
									"value": "{{applicationId}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Pet",
			"item": [
				{
					"name": "Get all pets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/pet",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"const req=JSON.parse(pm.request.body.raw);\r",
									"const resp = pm.response.json();\r",
									"\r",
									"pm.test(\"Created pet has correct datas\", function(){\r",
									"    pm.expect(req.name).is.eql(resp.name);\r",
									"    pm.expect(req.description).is.eql(resp.description);\r",
									"    pm.expect(req.pictureLink).is.eql(resp.pictureLink);\r",
									"})\r",
									"\r",
									"pm.collectionVariables.set(\"CreatedPet\", resp.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Test\",\r\n    \"species\": 1,\r\n    \"birth\": \"2022-12-25T00:00:00.000Z\",\r\n    \"gender\": 0,\r\n    \"isNeutered\": true,\r\n    \"description\": \"Test description\",\r\n    \"pictureLink\": \"https://lh3.googleusercontent.com\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/pet",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get specific pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"There is a pet with given id\",()=>{\r",
									"    var resp = pm.response.json();\r",
									"    pm.expect(resp.id).to.be.greaterThan(0);\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/pet/:petId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "{{CreatedPet}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change pet data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const req= JSON.parse(pm.request.body.raw);\r",
									"const resp = pm.response.json();\r",
									"\r",
									"pm.test(\"The name has changed\", ()=>{\r",
									"    pm.expect(req.name).to.be.eq(resp.name);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Fluffyxxx\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/pet/:petId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "{{CreatedPet}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/pet/:petId",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"pet",
								":petId"
							],
							"variable": [
								{
									"key": "petId",
									"value": "{{CreatedPet}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "http://localhost:5028"
		},
		{
			"key": "CreatedPet",
			"value": "67"
		},
		{
			"key": "currentDate",
			"value": "2024-07-11T08:38:28.022Z"
		},
		{
			"key": "advertisementId",
			"value": "10"
		},
		{
			"key": "userId",
			"value": "a01ea79e-f079-4374-a633-65dd9b6ee8d8"
		},
		{
			"key": "applicationId",
			"value": ""
		},
		{
			"key": "requestData",
			"value": ""
		}
	]
}
